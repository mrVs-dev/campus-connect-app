
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Super admin rule: Grants the specified user full read/write access to EVERYTHING.
    function isSuperAdmin() {
      return request.auth.token.email == 'vannak@api-school.com';
    }

    // Allow super admin to do anything.
    match /{document=**} {
      allow read, write: if isSuperAdmin();
    }
    
    // --- General Authenticated Access ---
    // Logged-in users can read from collections needed for the UI to function.
    // This prevents race conditions on initial load.
    match /students/{studentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // Further restricted in app logic
    }
    
    match /admissions/{admissionId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null;
    }

    match /teachers/{teacherId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null;
    }

    match /assessments/{assessmentId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null;
    }
    
    match /student_status_history/{historyId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null;
    }
    
    match /fees/{feeId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null;
    }
    
    match /invoices/{invoiceId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null;
    }
    
    match /inventory/{itemId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null;
    }

    match /settings/{settingId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null;
    }
    
    match /attendance/{attendanceId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update, delete: if request.auth.uid == userId;
    }

    match /fcmTokens/{token} {
        allow read, write: if request.auth != null;
    }
    
    match /metadata/{docId} {
      allow read, write: if request.auth != null;
    }
  }
}
