rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuthenticated() {
      return request.auth != null;
    }

    // Allow broad read access for any authenticated user to prevent initial load race conditions
    match /{document=**} {
      allow read: if isAuthenticated();
    }
    
    // Lock down writes and deletes to be more specific
    match /users/{userId} {
      allow write, delete: if request.auth.uid == userId;
    }
    
    match /students/{studentId} {
      allow write, delete: if isAuthenticated(); // More specific rules can be added here later
    }
    
    match /admissions/{admissionId} {
      allow write, delete: if isAuthenticated();
    }
    
    match /assessments/{assessmentId} {
       allow write, delete: if isAuthenticated();
    }
    
    match /teachers/{teacherId} {
      allow write, delete: if isAuthenticated();
    }
    
    match /student_status_history/{historyId} {
        allow create: if isAuthenticated();
        allow update, delete: if false; // History should be immutable
    }

    match /settings/{settingId} {
        allow write, delete: if isAuthenticated();
    }
    
    match /metadata/{docId} {
      allow write: if isAuthenticated();
    }
    
    match /attendance/{attendanceId} {
        allow write, delete: if isAuthenticated();
    }
    
    match /fcmTokens/{token} {
        allow write, delete: if isAuthenticated();
    }

    match /fees/{feeId} {
        allow write, delete: if isAuthenticated();
    }
    
    match /invoices/{invoiceId} {
        allow write, delete: if isAuthenticated();
    }
    
    match /inventory/{itemId} {
        allow write, delete: if isAuthenticated();
    }
  }
}
